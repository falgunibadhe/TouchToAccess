{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Falguni\\\\Desktop\\\\TouchToAccess\\\\pc-login-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport RegisterPage from './RegisterPage'; // Assuming RegisterPage is in the same directory\nimport LoginPage from './LoginPage'; // Assuming LoginPage is in the same directory\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to TouchToAccess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {\n            setIsAuthenticated: setIsAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Logged in successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","RegisterPage","LoginPage","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Falguni/Desktop/TouchToAccess/pc-login-frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport RegisterPage from './RegisterPage';  // Assuming RegisterPage is in the same directory\r\nimport LoginPage from './LoginPage';  // Assuming LoginPage is in the same directory\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <h1>Welcome to TouchToAccess</h1>\r\n\r\n        <Routes>\r\n          <Route path=\"/\" element={<LoginPage setIsAuthenticated={setIsAuthenticated} />} />\r\n          <Route path=\"/register\" element={<RegisterPage />} />\r\n          {/* Add other routes as needed */}\r\n        </Routes>\r\n\r\n        {/* Optional: Render content based on authentication status */}\r\n        {isAuthenticated && <div>Logged in successfully!</div>}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAE;AAC5C,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAE;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7D,oBACEQ,OAAA,CAACN,MAAM;IAAAW,QAAA,eACLL,OAAA;MAAKM,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBL,OAAA;QAAAK,QAAA,EAAI;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjCV,OAAA,CAACJ,MAAM;QAAAS,QAAA,gBACLL,OAAA,CAACL,KAAK;UAACgB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEZ,OAAA,CAACF,SAAS;YAACM,kBAAkB,EAAEA;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClFV,OAAA,CAACL,KAAK;UAACgB,IAAI,EAAC,WAAW;UAACC,OAAO,eAAEZ,OAAA,CAACH,YAAY;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/C,CAAC,EAGRP,eAAe,iBAAIH,OAAA;QAAAK,QAAA,EAAK;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACR,EAAA,CAnBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}