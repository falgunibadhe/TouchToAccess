{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Falguni\\\\Desktop\\\\TouchToAccess\\\\pc-login-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleLogin = async () => {\n    if (!email || !password) {\n      setMessage('Please enter both email and password.');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Send login credentials to the backend\n      const response = await axios.post('http://localhost:5000/validate-credentials', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        setMessage('Login successful. Awaiting fingerprint authentication...');\n\n        // Trigger the login request to the mobile app\n        const loginResponse = await axios.post('http://localhost:5000/login-request');\n        const {\n          loginId\n        } = loginResponse.data;\n\n        // Inform the user to authenticate with fingerprint\n        setMessage('Please authenticate with your fingerprint on the mobile app.');\n\n        // Polling for the status of the fingerprint authentication\n        const checkStatus = async () => {\n          const statusResponse = await axios.get(`http://localhost:5000/status/${loginId}`);\n          if (statusResponse.data.status === 'approved') {\n            setMessage('Login successful!');\n            setLoading(false);\n          } else if (statusResponse.data.status === 'pending') {\n            setTimeout(checkStatus, 2000); // Keep checking every 2 seconds\n          }\n        };\n        checkStatus(); // Start polling\n      } else {\n        setMessage('Invalid credentials.');\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setMessage('An error occurred. Please try again.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: loading,\n      children: loading ? 'Logging in...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"50vVFiR32tM2aw6Chy6WSzXHv4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","email","setEmail","password","setPassword","loading","setLoading","message","setMessage","handleLogin","response","post","data","success","loginResponse","loginId","checkStatus","statusResponse","get","status","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Falguni/Desktop/TouchToAccess/pc-login-frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      setMessage('Please enter both email and password.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Send login credentials to the backend\r\n      const response = await axios.post('http://localhost:5000/validate-credentials', {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setMessage('Login successful. Awaiting fingerprint authentication...');\r\n\r\n        // Trigger the login request to the mobile app\r\n        const loginResponse = await axios.post('http://localhost:5000/login-request');\r\n        const { loginId } = loginResponse.data;\r\n\r\n        // Inform the user to authenticate with fingerprint\r\n        setMessage('Please authenticate with your fingerprint on the mobile app.');\r\n\r\n        // Polling for the status of the fingerprint authentication\r\n        const checkStatus = async () => {\r\n          const statusResponse = await axios.get(`http://localhost:5000/status/${loginId}`);\r\n          if (statusResponse.data.status === 'approved') {\r\n            setMessage('Login successful!');\r\n            setLoading(false);\r\n          } else if (statusResponse.data.status === 'pending') {\r\n            setTimeout(checkStatus, 2000); // Keep checking every 2 seconds\r\n          }\r\n        };\r\n\r\n        checkStatus(); // Start polling\r\n      } else {\r\n        setMessage('Invalid credentials.');\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      setMessage('An error occurred. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Login</h1>\r\n      <div>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n      </div>\r\n      <button onClick={handleLogin} disabled={loading}>\r\n        {loading ? 'Logging in...' : 'Login'}\r\n      </button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}