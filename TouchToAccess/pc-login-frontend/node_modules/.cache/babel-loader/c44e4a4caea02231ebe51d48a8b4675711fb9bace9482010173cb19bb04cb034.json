{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Falguni\\\\Desktop\\\\TouchToAccess\\\\pc-login-frontend\\\\src\\\\components\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BACKEND_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginId, setLoginId] = useState(null);\n  const [status, setStatus] = useState('');\n  const handleLogin = async () => {\n    const res = await fetch(`${BACKEND_URL}/validate-credentials`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await res.json();\n    if (data.success) {\n      const loginRes = await fetch(`${BACKEND_URL}/login-request`, {\n        method: 'POST'\n      });\n      const loginData = await loginRes.json();\n      setLoginId(loginData.loginId);\n      setStatus('Waiting for fingerprint approval...');\n\n      // Poll for approval\n      const interval = setInterval(async () => {\n        const statusRes = await fetch(`${BACKEND_URL}/status/${loginData.loginId}`);\n        const statusData = await statusRes.json();\n        if (statusData.status === 'approved') {\n          clearInterval(interval);\n          setStatus('Login approved! Redirecting...');\n          // Redirect or do whatever you want\n        }\n      }, 2000);\n    } else {\n      setStatus('Invalid email or password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 91\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 97\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 116\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 122\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"CtBiiR1AoqZ7cPboUG6ShkjNmkI=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","BACKEND_URL","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","loginId","setLoginId","status","setStatus","handleLogin","res","fetch","method","headers","body","JSON","stringify","data","json","success","loginRes","loginData","interval","setInterval","statusRes","statusData","clearInterval","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Falguni/Desktop/TouchToAccess/pc-login-frontend/src/components/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BACKEND_URL } from '../config';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginId, setLoginId] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    const res = await fetch(`${BACKEND_URL}/validate-credentials`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (data.success) {\r\n      const loginRes = await fetch(`${BACKEND_URL}/login-request`, {\r\n        method: 'POST'\r\n      });\r\n      const loginData = await loginRes.json();\r\n      setLoginId(loginData.loginId);\r\n      setStatus('Waiting for fingerprint approval...');\r\n\r\n      // Poll for approval\r\n      const interval = setInterval(async () => {\r\n        const statusRes = await fetch(`${BACKEND_URL}/status/${loginData.loginId}`);\r\n        const statusData = await statusRes.json();\r\n        if (statusData.status === 'approved') {\r\n          clearInterval(interval);\r\n          setStatus('Login approved! Redirecting...');\r\n          // Redirect or do whatever you want\r\n        }\r\n      }, 2000);\r\n    } else {\r\n      setStatus('Invalid email or password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>Login</h2>\r\n      <input placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} /><br /><br />\r\n      <input placeholder=\"Password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} /><br /><br />\r\n      <button onClick={handleLogin}>Login</button>\r\n      <p>{status}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}